DROP DATABASE IF EXISTS SIMFIN;

CREATE DATABASE IF NOT EXISTS SIMFIN;

USE SIMFIN;

	/* REFERENCE TABLES */

-- STATEMENT TYPES

DROP TABLE IF EXISTS STATEMENT_TYPES;

CREATE TABLE STATEMENT_TYPES (

	STATEMENT_TYPE_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	STATEMENT_NAME VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (STATEMENT_TYPE_ID)
);

-- PERIODS

DROP TABLE IF EXISTS PERIODS;

CREATE TABLE PERIODS (

	PERIOD_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	PERIOD_NAME VARCHAR(8) NOT NULL UNIQUE,

	PRIMARY KEY (PERIOD_ID)
);

-- INDUSTRY_TEMPLATES

DROP TABLE IF EXISTS STD_INDUSTRY_TEMPLATES;

CREATE TABLE STD_INDUSTRY_TEMPLATES (

	STD_INDUSTRY_TEMPLATE_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	STD_INDUSTRY_TEMPLATE_NAME VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (STD_INDUSTRY_TEMPLATE_ID)
);

-- SECTORS

DROP TABLE IF EXISTS SECTORS;

CREATE TABLE SECTORS (

	SECTOR_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	SECTOR_CODE TINYINT UNSIGNED NOT NULL UNIQUE,
	SECTOR_NAME VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (SECTOR_ID)
);

-- INDUSTRIES

DROP TABLE IF EXISTS INDUSTRIES;

CREATE TABLE INDUSTRIES (

	INDUSTRY_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	INDUSTRY_CODE INT UNSIGNED NOT NULL UNIQUE,
	INDUSTRY_NAME VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (INDUSTRY_ID)
);

-- STATEMENT VALUE NAMES

DROP TABLE IF EXISTS STD_STATEMENT_VALUE_NAMES;

CREATE TABLE STD_STATEMENT_VALUE_NAMES (

	VALUE_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	VALUE_NAME VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (VALUE_ID)
);

DROP TABLE IF EXISTS RPT_STATEMENT_VALUE_NAMES;

CREATE TABLE RPT_STATEMENT_VALUE_NAMES (

	VALUE_ID INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	VALUE_NAME VARCHAR(255) NOT NULL UNIQUE,

	PRIMARY KEY (VALUE_ID)
);

-- REPORTED LINE ITEM TYPES

DROP TABLE IF EXISTS RPT_LINE_ITEM_TYPES;

CREATE TABLE RPT_LINE_ITEM_TYPES (

	RPT_LINE_ITEM_TYPE_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	RPT_LINE_ITEM_TYPE VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (RPT_LINE_ITEM_TYPE_ID)
);

-- SHARE CLASS TYPES

DROP TABLE IF EXISTS SHARE_CLASS_TYPES;

CREATE TABLE SHARE_CLASS_TYPES (

	CLASS_TYPE_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	CLASS_TYPE_NAME VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (CLASS_TYPE_ID)
);

-- SHARE CLASS NAMES

DROP TABLE IF EXISTS SHARE_CLASS_NAMES;

CREATE TABLE SHARE_CLASS_NAMES (

	CLASS_NAME_ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	CLASS_TYPE_ID TINYINT UNSIGNED NOT NULL,
	CLASS_NAME VARCHAR(64) NOT NULL UNIQUE,

	PRIMARY KEY (CLASS_NAME_ID),
	CONSTRAINT SCN_SCT_FK FOREIGN KEY (CLASS_TYPE_ID)
		REFERENCES SHARE_CLASS_TYPES (CLASS_TYPE_ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

	/* DATA TABLES */

-- ENTITIES

DROP TABLE IF EXISTS ENTITIES;

CREATE TABLE ENTITIES (

	SIMFIN_ID INT UNSIGNED NOT NULL UNIQUE,
	TICKER VARCHAR(16),
	NAME VARCHAR(64),
	FYEAR_MONTH_ENDING TINYINT UNSIGNED,
	EMPLOYEES INT UNSIGNED,
	SECTOR_ID TINYINT UNSIGNED,
	INDUSTRY_ID TINYINT UNSIGNED,
	PRIMARY_SHARE_CLASS_ID TINYINT UNSIGNED,

	PRIMARY KEY (SIMFIN_ID),
	CONSTRAINT ENT_SCT_FK FOREIGN KEY (SECTOR_ID)
		REFERENCES SECTORS (SECTOR_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT ENT_IND_FK FOREIGN KEY (INDUSTRY_ID)
		REFERENCES INDUSTRIES (INDUSTRY_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT ENT_PSC_FK FOREIGN KEY (PRIMARY_SHARE_CLASS_ID)
		REFERENCES SHARE_CLASS_NAMES (CLASS_NAME_ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

-- STATEMENT META DATA

	-- STANDARDIZED

DROP TABLE IF EXISTS STD_STATEMENT_META;

CREATE TABLE STD_STATEMENT_META (

	STD_STATEMENT_ID INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	SIMFIN_ID INT UNSIGNED NOT NULL,
	STATEMENT_TYPE_ID TINYINT UNSIGNED NOT NULL,
	FYEAR SMALLINT UNSIGNED NOT NULL,
	PERIOD_ID TINYINT UNSIGNED NOT NULL,
	PERIOD_BEGIN_DATE DATE NOT NULL,
	PERIOD_END_DATE DATE NOT NULL,
	CALCULATED BOOLEAN NOT NULL,
	STD_INDUSTRY_TEMPLATE_ID TINYINT UNSIGNED NOT NULL,

	KEY STD_STMT_META_K (SIMFIN_ID),
	CONSTRAINT STD_STMT_META_FK FOREIGN KEY (SIMFIN_ID) 
		REFERENCES ENTITIES (SIMFIN_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_STMT_TYPE_FK FOREIGN KEY (STATEMENT_TYPE_ID)
		REFERENCES STATEMENT_TYPES (STATEMENT_TYPE_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_IND_TMP_FK FOREIGN KEY (STD_INDUSTRY_TEMPLATE_ID)
		REFERENCES STD_INDUSTRY_TEMPLATES (STD_INDUSTRY_TEMPLATE_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_META_PD_FK FOREIGN KEY (PERIOD_ID)
		REFERENCES PERIODS (PERIOD_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_STMT_META_UNQ UNIQUE (SIMFIN_ID,
		STATEMENT_TYPE_ID, FYEAR, PERIOD_ID)
);

	-- AS REPORTED

DROP TABLE IF EXISTS RPT_STATEMENT_META;

CREATE TABLE RPT_STATEMENT_META (

	RPT_STATEMENT_ID INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	SIMFIN_ID INT UNSIGNED NOT NULL,
	STATEMENT_TYPE_ID TINYINT UNSIGNED NOT NULL,
	FYEAR SMALLINT UNSIGNED NOT NULL,
	PERIOD_ID TINYINT UNSIGNED NOT NULL,
	PERIOD_BEGIN_DATE DATE NOT NULL,
	PERIOD_END_DATE DATE NOT NULL,
	CALCULATED BOOLEAN NOT NULL,
	RESTATED BOOLEAN NOT NULL,
	FIRST_PUBLISHED_DATE DATE,
	FILING_DATE DATE NOT NULL,
	SOURCE_URL TEXT,

	KEY RPT_STMT_META_K (SIMFIN_ID),
	CONSTRAINT RPT_STMT_META_FK FOREIGN KEY (SIMFIN_ID)
		REFERENCES ENTITIES (SIMFIN_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_STMT_TYPE_FK FOREIGN KEY (STATEMENT_TYPE_ID)
		REFERENCES STATEMENT_TYPES (STATEMENT_TYPE_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_META_PD_FK FOREIGN KEY (PERIOD_ID)
		REFERENCES PERIODS (PERIOD_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_STMT_META_UNQ UNIQUE (SIMFIN_ID,
		STATEMENT_TYPE_ID, FYEAR, PERIOD_ID)

);

-- STATEMENT CALCULATION SCHEMES

	-- STANDARDIZED

DROP TABLE IF EXISTS STD_STATEMENT_CALCULATION_SCHEMES;

CREATE TABLE STD_STATEMENT_CALCULATION_SCHEMES (

	STD_STATEMENT_ID INT UNSIGNED NOT NULL,
	FYEAR SMALLINT UNSIGNED NOT NULL,
	PERIOD_ID TINYINT UNSIGNED NOT NULL,
	SIGN TINYINT NOT NULL,

	KEY STD_STMT_CALC_K (STD_STATEMENT_ID),
	CONSTRAINT STD_STMT_CALC_FK FOREIGN KEY (STD_STATEMENT_ID)
		REFERENCES STD_STATEMENT_META (STD_STATEMENT_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_CALC_SCHEMES_PD_FK FOREIGN KEY (PERIOD_ID)
		REFERENCES PERIODS (PERIOD_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_CALC_SCHEME_ELEM_UNQ UNIQUE
		(STD_STATEMENT_ID, FYEAR, PERIOD_ID, SIGN)
);

	-- AS REPORTED

DROP TABLE IF EXISTS RPT_STATEMENT_CALCULATION_SCHEMES;

CREATE TABLE RPT_STATEMENT_CALCULATION_SCHEMES (

	RPT_STATEMENT_ID INT UNSIGNED NOT NULL,
	FYEAR SMALLINT UNSIGNED NOT NULL,
	PERIOD_ID TINYINT UNSIGNED NOT NULL,
	SIGN TINYINT NOT NULL,

	KEY RPT_STMT_CALC_K (RPT_STATEMENT_ID),
	CONSTRAINT RPT_STMT_CALC_FK FOREIGN KEY (RPT_STATEMENT_ID)
		REFERENCES RPT_STATEMENT_META (RPT_STATEMENT_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_CALC_SCHEMES_PD_FK FOREIGN KEY (PERIOD_ID)
		REFERENCES PERIODS (PERIOD_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_CALC_SCHEME_ELEM_UNQ UNIQUE
		(RPT_STATEMENT_ID, FYEAR, PERIOD_ID, SIGN)
);

-- STATEMENT LINE ITEMS

	-- STANDARIZED

DROP TABLE IF EXISTS STD_STATEMENT_VALUES;

CREATE TABLE STD_STATEMENT_VALUES (

	STD_STATEMENT_ID INT UNSIGNED NOT NULL,
	TEMPLATE_ID SMALLINT UNSIGNED NOT NULL,
	UNIVERSAL_ID SMALLINT UNSIGNED NOT NULL,
	STD_NAME_ID SMALLINT UNSIGNED NOT NULL,
	PARENT_TEMPLATE_ID SMALLINT UNSIGNED NOT NULL,
	DISPLAY_TYPICAL BOOLEAN NOT NULL,
	CHOSEN_VALUE BIGINT NOT NULL,

	KEY STD_STMT_VAL_K (STD_STATEMENT_ID),
	CONSTRAINT STD_STMT_VAL_META_FK FOREIGN KEY (STD_STATEMENT_ID)
		REFERENCES STD_STATEMENT_META (STD_STATEMENT_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_STMT_VAL_NM_FK FOREIGN KEY (STD_NAME_ID)
		REFERENCES STD_STATEMENT_VALUE_NAMES (VALUE_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT STD_STMT_VAL_UNQ UNIQUE (STD_STATEMENT_ID,
		TEMPLATE_ID, UNIVERSAL_ID, STD_NAME_ID,
		PARENT_TEMPLATE_ID, DISPLAY_TYPICAL)
);

	-- AS REPORTED

DROP TABLE IF EXISTS RPT_STATEMENT_VALUES;

CREATE TABLE RPT_STATEMENT_VALUES (

	RPT_STATEMENT_ID INT UNSIGNED NOT NULL,
	RPT_NAME_ID INT UNSIGNED NOT NULL,
	RPT_LINE_ITEM_TYPE_ID TINYINT UNSIGNED NOT NULL,
	VALUE BIGINT NOT NULL,

	KEY RPT_STMT_VAL_K (RPT_STATEMENT_ID),
	CONSTRAINT RPT_STMT_VAL_META_FK FOREIGN KEY (RPT_STATEMENT_ID)
		REFERENCES RPT_STATEMENT_META (RPT_STATEMENT_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_STMT_VAL_NM_FK FOREIGN KEY (RPT_NAME_ID)
		REFERENCES RPT_STATEMENT_VALUE_NAMES (VALUE_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_LINE_ITEM_TYPE_FK FOREIGN KEY (RPT_LINE_ITEM_TYPE_ID)
		REFERENCES RPT_LINE_ITEM_TYPES (RPT_LINE_ITEM_TYPE_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT RPT_STMT_VAL_UNQ UNIQUE (RPT_STATEMENT_ID, 
		RPT_NAME_ID)
);

-- SHARE PRICES

DROP TABLE IF EXISTS PRIMARY_SHARE_CLASS_PRICES;

CREATE TABLE PRIMARY_SHARE_CLASS_PRICES (

	SIMFIN_ID INT UNSIGNED NOT NULL,
	CLOSING_DATE DATE NOT NULL,
	CLOSING_PRICE FLOAT NOT NULL,
	SPLIT_COEFFICIENT FLOAT NOT NULL,

	KEY PSCP_SIM_K (SIMFIN_ID),
	CONSTRAINT PSCP_SIM_FK FOREIGN KEY (SIMFIN_ID)
		REFERENCES ENTITIES (SIMFIN_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT PSCP_UNQ UNIQUE (SIMFIN_ID, CLOSING_DATE)
);

-- DILUTED SHARES OUTSTANDING

DROP TABLE IF EXISTS SHARES_OUTSTANDING;

CREATE TABLE SHARES_OUTSTANDING (

	SIMFIN_ID INT UNSIGNED NOT NULL,
	FYEAR SMALLINT UNSIGNED NOT NULL,
	PERIOD_ID TINYINT UNSIGNED NOT NULL,
	PERIOD_BEGIN_DATE DATE NOT NULL,
	PERIOD_END_DATE DATE NOT NULL,
	SHARES_OUTSTANDING INT UNSIGNED NOT NULL,

	KEY SO_SFID_K (SIMFIN_ID),
	CONSTRAINT SO_SFID_FK FOREIGN KEY (SIMFIN_ID)
		REFERENCES ENTITIES (SIMFIN_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT SO_PID_FK FOREIGN KEY (PERIOD_ID)
		REFERENCES PERIODS (PERIOD_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT SO_UNQ UNIQUE (SIMFIN_ID, FYEAR, PERIOD_ID)
);

-- DATABASE USERS

DROP USER IF EXISTS 'SIMFINDBREAD'@'localhost';
DROP USER IF EXISTS 'SIMFINDBWRITE'@'localhost';

CREATE USER 'SIMFINDBREAD'@'localhost' IDENTIFIED WITH mysql_native_password BY 'CD8NXIPBeID5GiHtlcXP';
CREATE USER 'SIMFINDBWRITE'@'localhost' IDENTIFIED WITH mysql_native_password BY 'hX81jgCXk7uCodrFkk17';

GRANT SELECT ON SIMFIN.* TO 'SIMFINDBREAD'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON SIMFIN.* TO 'SIMFINDBWRITE'@'localhost';
